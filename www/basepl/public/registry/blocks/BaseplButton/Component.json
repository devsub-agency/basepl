{
  "name": "Component",
  "type": "templates/blocks",
  "files": {
    "path": "BaseplButton/Component.tsx",
    "type": "templates/blocks",
    "content": "import { Button } from '@/components/ui/button'\r\nimport { BaseplButtonType, Media } from '@/payload-types'\r\nimport Link from 'next/link'\r\nimport Image from 'next/image'\r\n\r\nexport const BaseplButton = (props: BaseplButtonType) => {\r\n  const fallbackSlug = '/'\r\n  const fallbackIconSlug = '/'\r\n  const { id, size, variant, isIconStart, hasIcon, icon, link } = props\r\n  const {\r\n    label,\r\n    externalUrl,\r\n    emailAddress,\r\n    slug,\r\n    useSlug,\r\n    pageReference,\r\n    isOpenNewTab,\r\n    hasNoReferrer,\r\n    fileReference,\r\n    targetType,\r\n  } = link\r\n\r\n  const referrerPolicy = hasNoReferrer ? 'no-referrer' : undefined\r\n  const navigationTarget =\r\n    (externalUrl && isOpenNewTab) || targetType === 'file' ? '_blank' : undefined\r\n\r\n  const iconUrl = (icon as Media)?.url ?? fallbackIconSlug\r\n  const iconWidth = (icon as Media)?.width ?? 24\r\n  const iconHeight = (icon as Media)?.height ?? 24\r\n  const iconAlt = (icon as Media)?.alt ?? label\r\n  const fileReferenceUrl = (fileReference as Media)?.url ?? fallbackSlug\r\n\r\n  const getNavigationHref = () => {\r\n    if (targetType === 'page' && useSlug && slug) {\r\n      return slug\r\n    } else if (targetType === 'page' && typeof pageReference?.value !== 'string') {\r\n      return pageReference?.value.slug ?? fallbackSlug\r\n    } else if (targetType === 'external' && externalUrl) {\r\n      return externalUrl\r\n    } else if (targetType === 'email' && emailAddress) {\r\n      return `mailto:${emailAddress}`\r\n    } else if (targetType === 'file' && fileReference) {\r\n      return fileReferenceUrl\r\n    }\r\n    return fallbackSlug\r\n  }\r\n\r\n  const IconComponent = (\r\n    <Image src={iconUrl} alt={iconAlt} width={iconWidth} height={iconHeight} className=\"w-4 h-4\" />\r\n  )\r\n\r\n  return (\r\n    <Button variant={variant} size={size} id={id ?? undefined} asChild>\r\n      <Link href={getNavigationHref()} target={navigationTarget} referrerPolicy={referrerPolicy}>\r\n        {hasIcon && isIconStart && IconComponent}\r\n        {size !== 'icon' && label}\r\n        {hasIcon && !isIconStart && IconComponent}\r\n      </Link>\r\n    </Button>\r\n  )\r\n}\r\n"
  }
}
